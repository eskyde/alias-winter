/* Form */
form {
	display: grid;
	grid-auto-flow: row;

	margin-bottom: $spc-mrgn-base;

	> :last-child {
		margin-bottom: 0;
	}

	> .fields {
		$gutter: ($spc-mrgn-base * 0.75);

		@include vendor('display', 'flex');
		@include vendor('flex-wrap', 'wrap');
		width: calc(100% + #{$gutter * 2});
		margin: ($gutter * -1) 0 $spc-mrgn-base ($gutter * -1);

		> .field {
			@include vendor('flex-grow', '0');
			@include vendor('flex-shrink', '0');
			padding: $gutter 0 0 $gutter;
			width: calc(100% - #{$gutter * 1});

			display: grid;
			grid-template-areas:
				'label'
				'input';

			&.half {
				width: calc(50% - #{$gutter * 0.5});
			}

			&.third {
				width: calc(#{100% / 3} - #{$gutter * calc(1 / 3)});
			}

			&.quarter {
				width: calc(25% - #{$gutter * 0.25});
			}

			> input[required] + label:after,
			> select[required] + label:after,
			> textarea[required] + label:after {
				content: '*';
				font-size: 0.9rem;
				color: var(--color-error);
				margin-left: 2px;
			}

			> label {
				grid-area: label;
			}

			> input,
			textarea,
			select {
				grid-area: input;
			}
		}
	}

	> button {
		justify-self: end;
	}

	@include breakpoint('<=xsmall') {
		> .fields {
			$gutter: ($spc-mrgn-base * 0.75);

			width: calc(100% + #{$gutter * 2});
			margin: ($gutter * -1) 0 $spc-mrgn-base ($gutter * -1);

			> .field {
				padding: $gutter 0 0 $gutter;
				width: calc(100% - #{$gutter * 1});

				&.half {
					width: calc(100% - #{$gutter * 1});
				}

				&.third {
					width: calc(100% - #{$gutter * 1});
				}

				&.quarter {
					width: calc(100% - #{$gutter * 1});
				}
			}
		}
	}
}

label {
	color: #{var(--color-txt-bold)};
	display: block;
	font-size: 0.9rem;
	font-weight: $font-weight-light;
	letter-spacing: $font-letter-spacing;
	line-height: 1.5;
	margin: 0 0 ($spc-mrgn-base * 0.25) 0;
	text-transform: uppercase;
}

input[type='text'],
input[type='password'],
input[type='email'],
input[type='tel'],
input[type='date'],
select,
textarea {
	@include vendor('appearance', 'none');
	@include vendor(
		'transition',
		(
			'border-color #{$duration-transition} ease-in-out',
			'box-shadow #{$duration-transition} ease-in-out',
			'background-color #{$duration-transition} ease-in-out'
		)
	);
	background-color: transparent;
	border-radius: $size-border-radius;
	border: solid $size-border-width var(--color-border);
	min-height: $size-elem-hgth;
	color: inherit;
	display: block;
	outline: 0;
	padding: 0 1rem;
	text-decoration: none;
	width: 100%;

	&:invalid {
		box-shadow: none;
	}

	&:focus {
		background-color: var(--color-bg-highlight);
		border-color: var(--color-txt-bold);
		box-shadow: 0 0 0 $size-border-width #{var(--color-txt-bold)};
	}
}

input[type='date'] {
	// TODO make this dependent on a variable $darkmode
	color-scheme: dark;
}

select {
	background-image: svg-url(
		"<svg xmlns='http://www.w3.org/2000/svg' width='40' height='40' preserveAspectRatio='none' viewBox='0 0 40 40'><path d='M9.4,12.3l10.4,10.4l10.4-10.4c0.2-0.2,0.5-0.4,0.9-0.4c0.3,0,0.6,0.1,0.9,0.4l3.3,3.3c0.2,0.2,0.4,0.5,0.4,0.9 c0,0.4-0.1,0.6-0.4,0.9L20.7,31.9c-0.2,0.2-0.5,0.4-0.9,0.4c-0.3,0-0.6-0.1-0.9-0.4L4.3,17.3c-0.2-0.2-0.4-0.5-0.4-0.9 c0-0.4,0.1-0.6,0.4-0.9l3.3-3.3c0.2-0.2,0.5-0.4,0.9-0.4S9.1,12.1,9.4,12.3z' fill='#{$color-primary}' /></svg>"
	);
	background-size: 1.25rem;
	background-repeat: no-repeat;
	background-position: calc(100% - 1rem) center;

	height: $size-elem-hgth;
	padding-right: $size-elem-hgth;
	text-overflow: ellipsis;

	option {
		color: var(--color-txt);
		background: var(--color-bg);
	}

	&:focus {
		&::-ms-value {
			background-color: transparent;
		}
	}

	&::-ms-expand {
		display: none;
	}
}

input[type='text'],
input[type='password'],
input[type='email'],
select {
	height: $size-elem-hgth;
}

textarea {
	resize: none;
	padding: 0.75rem 1rem;
}

input[type='checkbox'],
input[type='radio'] {
	@include vendor('appearance', 'none');
	display: block;
	float: left;
	margin-right: -2rem;
	opacity: 0;
	width: 1rem;
	z-index: -1;

	& + label {
		@include icon(false, solid);
		@include vendor('user-select', 'none');
		color: var(--color-txt);
		cursor: pointer;
		display: inline-block;
		font-size: 0.8rem;
		font-weight: $font-weight-light;
		margin: 0 0 ($spc-mrgn-base * 0.25) 0;
		padding-left: ($size-elem-hgth * 0.6) + 1rem;
		padding-right: 0.75rem;
		position: relative;

		&:before {
			@include vendor(
				'transition',
				(
					'border-color #{$duration-transition} ease-in-out',
					'box-shadow #{$duration-transition} ease-in-out',
					'background-color #{$duration-transition} ease-in-out'
				)
			);
			border-radius: $size-border-radius;
			border: solid $size-border-width #{var(--color-border)};
			content: '';
			display: inline-block;
			height: ($size-elem-hgth * 0.6);
			left: 0;
			line-height: ($size-elem-hgth * 0.6);
			line-height: calc(#{$size-elem-hgth * 0.6} + 0em);
			position: absolute;
			text-align: center;
			top: -0.15rem;
			width: ($size-elem-hgth * 0.6);
		}
	}

	&:checked + label {
		&:before {
			background: var(--color-txt-bold) !important;
			border-color: var(--color-border) !important;
			color: var(--color-bg);
			font-weight: 900; // because content elem '\f00c' is only in 900font
			content: '\f00c';
		}
	}

	&:focus + label {
		&:before {
			background: var(--color-bg-highlight);
			border-color: var(--color-border);
			box-shadow: 0 0 0 $size-border-width var(--color-txt-bold);
		}
	}
}

input[type='checkbox'] {
	& + label {
		&:before {
			border-radius: $size-border-radius;
		}
	}
}

input[type='radio'] {
	& + label {
		&:before {
			border-radius: 100%;
		}
	}
}

::-webkit-input-placeholder {
	color: var(--color-txt-light) !important;
	opacity: 1;
}

:-moz-placeholder {
	color: var(--color-txt-light) !important;
	opacity: 1;
}

::-moz-placeholder {
	color: var(--color-txt-light) !important;
	opacity: 1;
}

:-ms-input-placeholder {
	color: var(--color-txt-light) !important;
	opacity: 1;
}

.formerize-placeholder {
	color: var(--color-txt-light) !important;
	opacity: 1;
}

::-webkit-calendar-picker-indicator {
	background-image: url('../svg/calendar.svg');
}
